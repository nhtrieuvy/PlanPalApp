# Generated by Django 5.2.4 on 2025-07-24 20:52

import cloudinary.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Thời gian tạo')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Thời gian cập nhật cuối')),
                ('phone_number', models.CharField(blank=True, help_text='Số điện thoại với mã quốc gia', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number phải có format: '+999999999'. Tối đa 15 số.", regex='^\\+?1?\\d{9,15}$')])),
                ('avatar', cloudinary.models.CloudinaryField(blank=True, help_text='Ảnh đại diện người dùng', max_length=255, null=True, verbose_name='image')),
                ('date_of_birth', models.DateField(blank=True, help_text='Ngày sinh của người dùng', null=True)),
                ('bio', models.TextField(blank=True, help_text='Giới thiệu bản thân (tối đa 500 ký tự)', max_length=500)),
                ('is_online', models.BooleanField(db_index=True, default=False, help_text='Trạng thái online của user')),
                ('last_seen', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Lần cuối user online')),
                ('fcm_token', models.CharField(blank=True, help_text='Firebase Cloud Messaging token', max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'planpal_users',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Thời gian tạo')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Thời gian cập nhật cuối')),
                ('status', models.CharField(choices=[('pending', 'Đang chờ'), ('accepted', 'Đã chấp nhận'), ('rejected', 'Đã từ chối'), ('blocked', 'Đã chặn')], db_index=True, default='pending', help_text='Trạng thái lời mời kết bạn', max_length=20)),
                ('friend', models.ForeignKey(help_text='User who received the friend request', on_delete=django.db.models.deletion.CASCADE, related_name='received_friendships', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='User who sent the friend request', on_delete=django.db.models.deletion.CASCADE, related_name='sent_friendships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'planpal_friendships',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Thời gian tạo')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Thời gian cập nhật cuối')),
                ('name', models.CharField(help_text='Tên nhóm du lịch', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Mô tả về nhóm')),
                ('cover_image', cloudinary.models.CloudinaryField(blank=True, help_text='Ảnh bìa của nhóm', max_length=255, null=True, verbose_name='image')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Nhóm có đang hoạt động không')),
                ('admin', models.ForeignKey(help_text='Người quản trị nhóm', on_delete=django.db.models.deletion.CASCADE, related_name='administered_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'planpal_groups',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Thời gian tạo')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Thời gian cập nhật cuối')),
                ('message_type', models.CharField(choices=[('text', 'Văn bản'), ('image', 'Hình ảnh'), ('file', 'File đính kèm'), ('location', 'Vị trí'), ('system', 'Thông báo hệ thống')], db_index=True, default='text', help_text='Loại tin nhắn', max_length=20)),
                ('content', models.TextField(help_text='Nội dung tin nhắn')),
                ('attachment', cloudinary.models.CloudinaryField(blank=True, help_text='File đính kèm (hình ảnh, document)', max_length=255, null=True, verbose_name='auto')),
                ('attachment_name', models.CharField(blank=True, help_text='Tên gốc của file', max_length=255)),
                ('attachment_size', models.PositiveIntegerField(blank=True, help_text='Kích thước file (bytes)', null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Vĩ độ của location', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Kinh độ của location', max_digits=9, null=True)),
                ('location_name', models.CharField(blank=True, help_text='Tên địa điểm', max_length=200)),
                ('is_edited', models.BooleanField(default=False, help_text='Tin nhắn đã được chỉnh sửa')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, help_text='Tin nhắn đã bị xóa (soft delete)')),
                ('reply_to', models.ForeignKey(blank=True, help_text='Tin nhắn được reply', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='planpals.chatmessage')),
                ('sender', models.ForeignKey(blank=True, help_text='Người gửi tin nhắn', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(help_text='Nhóm chứa tin nhắn này', on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='planpals.group')),
            ],
            options={
                'db_table': 'planpal_chat_messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Thời gian tạo')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Thời gian cập nhật cuối')),
                ('role', models.CharField(choices=[('admin', 'Quản trị viên'), ('member', 'Thành viên')], db_index=True, default='member', help_text='Vai trò trong nhóm', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True, help_text='Thời gian tham gia nhóm')),
                ('group', models.ForeignKey(help_text='Nhóm', on_delete=django.db.models.deletion.CASCADE, to='planpals.group')),
                ('user', models.ForeignKey(help_text='User trong nhóm', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'planpal_group_memberships',
                'ordering': ['joined_at'],
            },
        ),
        migrations.AddField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(help_text='Các thành viên trong nhóm', related_name='joined_groups', through='planpals.GroupMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MessageReadStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Thời gian tạo')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Thời gian cập nhật cuối')),
                ('read_at', models.DateTimeField(auto_now_add=True, help_text='Thời gian đọc tin nhắn')),
                ('message', models.ForeignKey(help_text='Tin nhắn được đọc', on_delete=django.db.models.deletion.CASCADE, related_name='read_statuses', to='planpals.chatmessage')),
                ('user', models.ForeignKey(help_text='User đã đọc tin nhắn', on_delete=django.db.models.deletion.CASCADE, related_name='message_read_statuses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'planpal_message_read_statuses',
                'ordering': ['read_at'],
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Thời gian tạo')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Thời gian cập nhật cuối')),
                ('title', models.CharField(help_text='Tiêu đề kế hoạch du lịch', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Mô tả chi tiết về kế hoạch')),
                ('plan_type', models.CharField(choices=[('personal', 'Cá nhân'), ('group', 'Nhóm')], db_index=True, default='personal', help_text='Loại kế hoạch: cá nhân hoặc nhóm', max_length=20)),
                ('start_date', models.DateTimeField(help_text='Thời gian bắt đầu chuyến đi')),
                ('end_date', models.DateTimeField(help_text='Thời gian kết thúc chuyến đi')),
                ('budget', models.DecimalField(blank=True, decimal_places=2, help_text='Ngân sách dự kiến (VND)', max_digits=12, null=True)),
                ('is_public', models.BooleanField(db_index=True, default=False, help_text='Có thể xem công khai không')),
                ('status', models.CharField(choices=[('draft', 'Bản nháp'), ('published', 'Đã xuất bản'), ('ongoing', 'Đang diễn ra'), ('completed', 'Đã hoàn thành'), ('cancelled', 'Đã hủy')], db_index=True, default='draft', help_text='Trạng thái kế hoạch', max_length=20)),
                ('creator', models.ForeignKey(help_text='Người tạo/sở hữu kế hoạch', on_delete=django.db.models.deletion.CASCADE, related_name='created_plans', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(blank=True, help_text='Nhóm sở hữu kế hoạch này (null nếu là personal plan)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='planpals.group')),
            ],
            options={
                'db_table': 'planpal_plans',
            },
        ),
        migrations.CreateModel(
            name='PlanActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Thời gian tạo')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Thời gian cập nhật cuối')),
                ('title', models.CharField(help_text='Tên hoạt động', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Mô tả chi tiết hoạt động')),
                ('activity_type', models.CharField(choices=[('restaurant', 'Nhà hàng'), ('attraction', 'Điểm tham quan'), ('hotel', 'Khách sạn'), ('transport', 'Di chuyển'), ('shopping', 'Mua sắm'), ('entertainment', 'Giải trí'), ('custom', 'Khác')], db_index=True, default='custom', help_text='Loại hoạt động', max_length=20)),
                ('start_time', models.DateTimeField(help_text='Thời gian bắt đầu hoạt động')),
                ('end_time', models.DateTimeField(help_text='Thời gian kết thúc hoạt động')),
                ('location_name', models.CharField(blank=True, help_text='Tên địa điểm', max_length=200)),
                ('location_address', models.TextField(blank=True, help_text='Địa chỉ chi tiết')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Vĩ độ', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Kinh độ', max_digits=9, null=True)),
                ('google_place_id', models.CharField(blank=True, help_text='Google Places API place ID', max_length=200)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Chi phí dự kiến (VND)', max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, help_text='Ghi chú thêm')),
                ('order', models.PositiveIntegerField(default=0, help_text='Thứ tự hoạt động trong ngày')),
                ('plan', models.ForeignKey(help_text='Kế hoạch chứa hoạt động này', on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='planpals.plan')),
            ],
            options={
                'db_table': 'planpal_plan_activities',
                'ordering': ['start_time', 'order'],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['created_at'], name='planpal_use_created_eab08a_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['updated_at'], name='planpal_use_updated_cdbae8_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['first_name', 'last_name'], name='planpal_use_first_n_9c85f1_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_online', 'last_seen'], name='planpal_use_is_onli_6c0997_idx'),
        ),
        migrations.AddIndex(
            model_name='friendship',
            index=models.Index(fields=['created_at'], name='planpal_fri_created_6d53be_idx'),
        ),
        migrations.AddIndex(
            model_name='friendship',
            index=models.Index(fields=['updated_at'], name='planpal_fri_updated_de74b8_idx'),
        ),
        migrations.AddIndex(
            model_name='friendship',
            index=models.Index(fields=['user', 'status'], name='planpal_fri_user_id_6189c1_idx'),
        ),
        migrations.AddIndex(
            model_name='friendship',
            index=models.Index(fields=['friend', 'status'], name='planpal_fri_friend__566eaf_idx'),
        ),
        migrations.AddIndex(
            model_name='friendship',
            index=models.Index(fields=['status', 'created_at'], name='planpal_fri_status_bad874_idx'),
        ),
        migrations.AddIndex(
            model_name='friendship',
            index=models.Index(fields=['user', 'friend', 'status'], name='planpal_fri_user_id_89d58d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='friendship',
            unique_together={('user', 'friend')},
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['created_at'], name='planpal_cha_created_88ae39_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['updated_at'], name='planpal_cha_updated_18a695_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['group', 'created_at'], name='planpal_cha_group_i_ead640_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['sender', 'created_at'], name='planpal_cha_sender__f5ae12_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['message_type', 'created_at'], name='planpal_cha_message_512278_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['group', 'is_deleted', 'created_at'], name='planpal_cha_group_i_3bc904_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['created_at'], name='planpal_gro_created_0758e3_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['updated_at'], name='planpal_gro_updated_937700_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['group', 'role'], name='planpal_gro_group_i_03f700_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['user', 'role'], name='planpal_gro_user_id_24aafd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='groupmembership',
            unique_together={('user', 'group')},
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['created_at'], name='planpal_gro_created_6a41a9_idx'),
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['updated_at'], name='planpal_gro_updated_a90080_idx'),
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['admin', 'is_active'], name='planpal_gro_admin_i_65e190_idx'),
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['is_active', 'created_at'], name='planpal_gro_is_acti_dfd2e9_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereadstatus',
            index=models.Index(fields=['created_at'], name='planpal_mes_created_d69eee_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereadstatus',
            index=models.Index(fields=['updated_at'], name='planpal_mes_updated_b152ff_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereadstatus',
            index=models.Index(fields=['message', 'read_at'], name='planpal_mes_message_3f86c5_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereadstatus',
            index=models.Index(fields=['user', 'read_at'], name='planpal_mes_user_id_64509f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='messagereadstatus',
            unique_together={('message', 'user')},
        ),
        migrations.AddIndex(
            model_name='plan',
            index=models.Index(fields=['created_at'], name='planpal_pla_created_e551ac_idx'),
        ),
        migrations.AddIndex(
            model_name='plan',
            index=models.Index(fields=['updated_at'], name='planpal_pla_updated_1fc8db_idx'),
        ),
        migrations.AddIndex(
            model_name='plan',
            index=models.Index(fields=['creator', 'plan_type', 'status'], name='planpal_pla_creator_b86e43_idx'),
        ),
        migrations.AddIndex(
            model_name='plan',
            index=models.Index(fields=['group', 'status'], name='planpal_pla_group_i_52512a_idx'),
        ),
        migrations.AddIndex(
            model_name='plan',
            index=models.Index(fields=['start_date', 'end_date'], name='planpal_pla_start_d_2cda81_idx'),
        ),
        migrations.AddIndex(
            model_name='plan',
            index=models.Index(fields=['is_public', 'plan_type', 'status'], name='planpal_pla_is_publ_77047f_idx'),
        ),
        migrations.AddIndex(
            model_name='planactivity',
            index=models.Index(fields=['created_at'], name='planpal_pla_created_022eb6_idx'),
        ),
        migrations.AddIndex(
            model_name='planactivity',
            index=models.Index(fields=['updated_at'], name='planpal_pla_updated_be8f88_idx'),
        ),
        migrations.AddIndex(
            model_name='planactivity',
            index=models.Index(fields=['plan', 'start_time'], name='planpal_pla_plan_id_b48678_idx'),
        ),
        migrations.AddIndex(
            model_name='planactivity',
            index=models.Index(fields=['activity_type', 'start_time'], name='planpal_pla_activit_1238b9_idx'),
        ),
        migrations.AddIndex(
            model_name='planactivity',
            index=models.Index(fields=['start_time'], name='planpal_pla_start_t_a6e1e0_idx'),
        ),
    ]
